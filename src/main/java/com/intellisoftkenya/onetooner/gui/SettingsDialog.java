/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.intellisoftkenya.onetooner.gui;

import com.intellisoftkenya.onetooner.PropertyManager;
import javax.swing.ImageIcon;

/**
 *
 * @author gitahi
 */
public class SettingsDialog extends javax.swing.JDialog {

    /**
     * Creates new form SettingsDialog
     *
     * @param parent this dialogs parent
     * @param modal if true, dialog covers parent
     */
    public SettingsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/icons/settings-icon.png")).getImage());
        loadProperties(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sourcePanel = new javax.swing.JPanel();
        sourceDriverLabel = new javax.swing.JLabel();
        sourceDriverTextField = new javax.swing.JTextField();
        sourceUrlLabel = new javax.swing.JLabel();
        sourceUrlTextField = new javax.swing.JTextField();
        sourceUsernameLabel = new javax.swing.JLabel();
        sourceUsernameTextField = new javax.swing.JTextField();
        sourcePasswordLabel = new javax.swing.JLabel();
        sourcePasswordField = new javax.swing.JPasswordField();
        destinationPanel = new javax.swing.JPanel();
        destinationDriverLabel = new javax.swing.JLabel();
        destinationDriverTextField = new javax.swing.JTextField();
        destinationUrlLabel = new javax.swing.JLabel();
        destinationUrlTextField = new javax.swing.JTextField();
        destinationUsernameLabel = new javax.swing.JLabel();
        destinationUsernameTextField = new javax.swing.JTextField();
        destinationPasswordLabel = new javax.swing.JLabel();
        destinationPasswordField = new javax.swing.JPasswordField();
        loggingPanel = new javax.swing.JPanel();
        loggingLevelLabel = new javax.swing.JLabel();
        loggingLevelComboBox = new javax.swing.JComboBox();
        loggingLevelScrollPane = new javax.swing.JScrollPane();
        loggingLevelTextArea = new javax.swing.JTextArea();
        okButton = new javax.swing.JButton();
        defaultsButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings");

        sourcePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Source database"));

        sourceDriverLabel.setText("Driver");

        sourceUrlLabel.setText("URL");

        sourceUsernameLabel.setText("Username");

        sourcePasswordLabel.setText("Password");

        javax.swing.GroupLayout sourcePanelLayout = new javax.swing.GroupLayout(sourcePanel);
        sourcePanel.setLayout(sourcePanelLayout);
        sourcePanelLayout.setHorizontalGroup(
            sourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourcePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sourceDriverLabel)
                    .addComponent(sourceUrlLabel)
                    .addComponent(sourceUsernameLabel)
                    .addComponent(sourcePasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sourceUsernameTextField)
                    .addComponent(sourceDriverTextField)
                    .addComponent(sourceUrlTextField)
                    .addComponent(sourcePasswordField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        sourcePanelLayout.setVerticalGroup(
            sourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourcePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceDriverLabel)
                    .addComponent(sourceDriverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceUrlLabel)
                    .addComponent(sourceUrlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceUsernameLabel)
                    .addComponent(sourceUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourcePasswordLabel)
                    .addComponent(sourcePasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        destinationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Destination database"));

        destinationDriverLabel.setText("Driver");

        destinationUrlLabel.setText("URL");

        destinationUsernameLabel.setText("Username");

        destinationPasswordLabel.setText("Password");

        javax.swing.GroupLayout destinationPanelLayout = new javax.swing.GroupLayout(destinationPanel);
        destinationPanel.setLayout(destinationPanelLayout);
        destinationPanelLayout.setHorizontalGroup(
            destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(destinationDriverLabel)
                    .addComponent(destinationUrlLabel)
                    .addComponent(destinationUsernameLabel)
                    .addComponent(destinationPasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(destinationUsernameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                    .addComponent(destinationDriverTextField)
                    .addComponent(destinationUrlTextField)
                    .addComponent(destinationPasswordField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        destinationPanelLayout.setVerticalGroup(
            destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationDriverLabel)
                    .addComponent(destinationDriverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationUrlLabel)
                    .addComponent(destinationUrlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationUsernameLabel)
                    .addComponent(destinationUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationPasswordLabel)
                    .addComponent(destinationPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        loggingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Logging"));

        loggingLevelLabel.setText("Level");

        loggingLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SEVERE", "WARNING", "INFO", "FINE", "FINER", "FINEST", "ALL", "OFF" }));
        loggingLevelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loggingLevelComboBoxActionPerformed(evt);
            }
        });

        loggingLevelTextArea.setEditable(false);
        loggingLevelTextArea.setColumns(20);
        loggingLevelTextArea.setLineWrap(true);
        loggingLevelTextArea.setRows(5);
        loggingLevelTextArea.setWrapStyleWord(true);
        loggingLevelScrollPane.setViewportView(loggingLevelTextArea);

        javax.swing.GroupLayout loggingPanelLayout = new javax.swing.GroupLayout(loggingPanel);
        loggingPanel.setLayout(loggingPanelLayout);
        loggingPanelLayout.setHorizontalGroup(
            loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loggingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loggingLevelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loggingLevelScrollPane)
                    .addComponent(loggingLevelComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        loggingPanelLayout.setVerticalGroup(
            loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loggingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loggingLevelLabel)
                    .addComponent(loggingLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loggingLevelScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addContainerGap())
        );

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        defaultsButton.setText("Restore defaults");
        defaultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultsButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sourcePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(destinationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loggingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(defaultsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {closeButton, defaultsButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sourcePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(destinationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loggingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(defaultsButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(closeButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {closeButton, defaultsButton, okButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        setProperties();
        saveProperties();
    }//GEN-LAST:event_okButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void defaultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultsButtonActionPerformed
        restoreDefaults();
    }//GEN-LAST:event_defaultsButtonActionPerformed

    private void loggingLevelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loggingLevelComboBoxActionPerformed
        String level = (String) loggingLevelComboBox.getSelectedItem();
        if (level != null) {
            explainLevel(level);
        }
    }//GEN-LAST:event_loggingLevelComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton defaultsButton;
    private javax.swing.JLabel destinationDriverLabel;
    private javax.swing.JTextField destinationDriverTextField;
    private javax.swing.JPanel destinationPanel;
    private javax.swing.JPasswordField destinationPasswordField;
    private javax.swing.JLabel destinationPasswordLabel;
    private javax.swing.JLabel destinationUrlLabel;
    private javax.swing.JTextField destinationUrlTextField;
    private javax.swing.JLabel destinationUsernameLabel;
    private javax.swing.JTextField destinationUsernameTextField;
    private javax.swing.JComboBox loggingLevelComboBox;
    private javax.swing.JLabel loggingLevelLabel;
    private javax.swing.JScrollPane loggingLevelScrollPane;
    private javax.swing.JTextArea loggingLevelTextArea;
    private javax.swing.JPanel loggingPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel sourceDriverLabel;
    private javax.swing.JTextField sourceDriverTextField;
    private javax.swing.JPanel sourcePanel;
    private javax.swing.JPasswordField sourcePasswordField;
    private javax.swing.JLabel sourcePasswordLabel;
    private javax.swing.JLabel sourceUrlLabel;
    private javax.swing.JTextField sourceUrlTextField;
    private javax.swing.JLabel sourceUsernameLabel;
    private javax.swing.JTextField sourceUsernameTextField;
    // End of variables declaration//GEN-END:variables

    private void loadProperties(boolean def) {
        sourceDriverTextField.setText(PropertyManager.getProperty("source.driver", def));
        sourceUrlTextField.setText(PropertyManager.getProperty("source.url", def));
        sourceUsernameTextField.setText(PropertyManager.getProperty("source.username", def));
        sourcePasswordField.setText(PropertyManager.getProperty("source.password", def));

        destinationDriverTextField.setText(PropertyManager.getProperty("destination.driver", def));
        destinationUrlTextField.setText(PropertyManager.getProperty("destination.url", def));
        destinationUsernameTextField.setText(PropertyManager.getProperty("destination.username", def));
        destinationPasswordField.setText(PropertyManager.getProperty("destination.password", def));

        loggingLevelComboBox.setSelectedItem(PropertyManager.getProperty("logging.level", def));
    }

    private void setProperties() {
        PropertyManager.setProperty("source.driver", sourceDriverTextField.getText());
        PropertyManager.setProperty("source.url", sourceUrlTextField.getText());
        PropertyManager.setProperty("source.username", sourceUsernameTextField.getText());
        PropertyManager.setProperty("source.password", sourcePasswordField.getText());

        PropertyManager.setProperty("destination.driver", destinationDriverTextField.getText());
        PropertyManager.setProperty("destination.url", destinationUrlTextField.getText());
        PropertyManager.setProperty("destination.username", destinationUsernameTextField.getText());
        PropertyManager.setProperty("destination.password", destinationPasswordField.getText());

        PropertyManager.setProperty("logging.level", loggingLevelComboBox.getSelectedItem().toString());
    }

    private void saveProperties() {
        PropertyManager.saveProperties();
        close();
    }

    private void restoreDefaults() {
        loadProperties(true);
    }

    private void close() {
        this.dispose();
    }

    private void explainLevel(String level) {
        switch (level) {
            case "SEVERE":
                loggingLevelTextArea.setText(level + ": Messages indicating serious failure.");
                break;
            case "WARNING":
                loggingLevelTextArea.setText(level + ": Messages indicating a potential problem.");
                break;
            case "INFO":
                loggingLevelTextArea.setText(level + ": General informational messages. (Recommended)");
                break;
            case "FINE":
                loggingLevelTextArea.setText(level + ": Tracing information.");
                break;
            case "FINER":
                loggingLevelTextArea.setText(level + ": Fairly detailed tracing information.");
                break;
            case "FINEST":
                loggingLevelTextArea.setText(level + ": Highly detailed training information. (A lot of output, use judiciously)");
                break;
            case "ALL":
                loggingLevelTextArea.setText(level + ": All messages. (A lot of output, use judiciously)");
                break;
            case "OFF":
                loggingLevelTextArea.setText(level + ": No messages will be logged. (Not recommended)");
                break;
            default:
                loggingLevelTextArea.setText("");
                break;
        }
        loggingLevelTextArea.append("\n\nExcept for ALL and OFF, all other logging levels are hierarchical. "
                + "Therefore selecting a given logging level activates that level and all levels above it. "
                + "The level INFO is most reasonable for most purposes. Generally use lower levels only "
                + "when trying to diagnose a problem.");
    }
}
